我的咋老是不对呢
/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var mergeTwoLists = function(l1, l2) {
    var result = ListNode(0);
    if(l1 == null && l2 != null) return l2;
    if(l2 == null && l1 != null) return l1;
    
        if(l1.val <= l2.val){
            result.next = l1;
            l1 = l1.next;
        }else{
            result.next = l2;
            l2.next = l2;
        }
    return result.next;
};

这个我用的是古老的方法


/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var mergeTwoLists = function(l1, l2) {
    if(l1 == null && l2 != null) return l2;
    if(l2 == null && l1 != null) return l1;
    
        if(l1.val <= l2.val){
            l1.next = mergeTwoLists(l1.next , l2);
            return l1;
        }
        if(l1.val > l2.val){
            l2.next = mergeTwoLists(l1 , l2.next);
            return l2;
        }
    
};

这个是递归方法，好用而且不会出错嘿嘿

